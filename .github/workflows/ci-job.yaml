name: ci-job

on: 
  push:
    branches: [developer,release,main]
  pull_request:
    branches: [developer,release,main]
env:
  REGISTRY: nhat190899
  IMAGE_NAME_PREFIX: fsoft
  REPO_GITHUB_INFRA: nhat190899/gitops-sharing-infra
  USER_EMAIL: nhat190899@gmail.com
  USER_NAME: nhat190899
jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      app_env: ${{ steps.setvars.outputs.app_env }}
    steps:
      - name: Set variables for branch
        id: setvars
        run: |
          if [[ "${{github.base_ref}}" == "devloper" || "${{github.ref}}" == "refs/heads/developer" ]]; then
            echo "app_env=local" >> $GITHUB_OUTPUT
          fi

          if [[ "${{github.base_ref}}" == "release" || "${{github.ref}}" == "refs/heads/release" ]]; then
            echo "app_env=staging" >> $GITHUB_OUTPUT
          fi

          if [[ "${{github.base_ref}}" == "main" || "${{github.ref}}" == "refs/heads/main" ]]; then
            echo "app_env=production" >> $GITHUB_OUTPUT
          fi
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.20.0]
    steps:
      - uses: actions/checkout@v3
      - name: Use NodeJs ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm i
      - run: npm run build --if-present

  test-stage:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Running Tests
        uses: actions/checkout@v3
      - run: echo "runningggg"

  build-and-push-docker-image:
    name: Build docker image and push to repo
    runs-on: ubuntu-latest
    needs: ['init', 'build', 'test-stage']
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup on Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with: 
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build image and push to Docker Hub and Git Container Registry
        uses: docker/build-push-action@v4
        with:
          context: ./
          tags: ${{env.REGISTRY}}/${{env.IMAGE_NAME_PREFIX}}-${{needs.init.outputs.app_env}}:${{ github.sha }}
          push: true
          platforms: linux/amd64,linux/arm64
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  update-manifest-stage:
    runs-on: ubuntu-latest
    needs: ['init', 'build-and-push-docker-image']
    steps: 
      - uses: actions/checkout@v3
        with: 
          repository: ${{env.REPO_GITHUB_INFRA}}
          ref: 'main'
          token: ${{ secrets.G_TOKEN }}
      - name: setup-git-config
        run: |
          git config --global user.email "${{env.USER_EMAIL}}"
          git config --global user.name "${{env.USER_NAME}}"
          echo ${{ github.sha }}
          sed -i "s#${{env.REGISTRY}}.*#${{env.REGISTRY}}/${{env.IMAGE_NAME_PREFIX}}-${{needs.init.outputs.app_env}}:${{ github.sha }}#g" value-${{needs.init.outputs.app_env}}.yaml
          git add -A 
          git commit -am "Update image for - ${{ github.sha }}"
      - run: echo ${{ github }}
      - run: git push origin main
          
